"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6796],{3905:(e,i,n)=>{n.d(i,{Zo:()=>u,kt:()=>g});var t=n(7294);function d(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function r(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?r(Object(n),!0).forEach((function(i){d(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function o(e,i){if(null==e)return{};var n,t,d=function(e,i){if(null==e)return{};var n,t,d={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],i.indexOf(n)>=0||(d[n]=e[n]);return d}(e,i);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(d[n]=e[n])}return d}var _=t.createContext({}),p=function(e){var i=t.useContext(_),n=i;return e&&(n="function"==typeof e?e(i):s(s({},i),e)),n},u=function(e){var i=p(e.components);return t.createElement(_.Provider,{value:i},e.children)},a="mdxType",c={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},l=t.forwardRef((function(e,i){var n=e.components,d=e.mdxType,r=e.originalType,_=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),a=p(n),l=d,g=a["".concat(_,".").concat(l)]||a[l]||c[l]||r;return n?t.createElement(g,s(s({ref:i},u),{},{components:n})):t.createElement(g,s({ref:i},u))}));function g(e,i){var n=arguments,d=i&&i.mdxType;if("string"==typeof e||d){var r=n.length,s=new Array(r);s[0]=l;var o={};for(var _ in i)hasOwnProperty.call(i,_)&&(o[_]=i[_]);o.originalType=e,o[a]="string"==typeof e?e:d,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}l.displayName="MDXCreateElement"},130:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>_,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var t=n(7462),d=(n(7294),n(3905));const r={title:"Kream Clone Project",tags:["BackEnd","Django"],authors:"chihun"},s="KREAM Clone Project",o={permalink:"/2021/11/10/backend/project/kream-clone",source:"@site/blog/backend/project/2021-11-10-kream-clone.md",title:"Kream Clone Project",description:"\uae30\uac04: 2021-10-10 ~ 2021-10-29",date:"2021-11-10T00:00:00.000Z",formattedDate:"November 10, 2021",tags:[{label:"BackEnd",permalink:"/tags/back-end"},{label:"Django",permalink:"/tags/django"}],readingTime:18.435,hasTruncateMarker:!0,authors:[{name:"Chihun Park",url:"https://github.com/chihunmanse",email:"chihunmanse@gmail.com",imageURL:"https://p.ipic.vip/o1ih3g.png",key:"chihun"}],frontMatter:{title:"Kream Clone Project",tags:["BackEnd","Django"],authors:"chihun"},prevItem:{title:"\uc6d0\ud2f0\ub4dc \ud504\ub9ac\uc628\ubcf4\ub529 8percent \uae30\uc5c5\uacfc\uc81c",permalink:"/2021/11/20/backend/project/preonboarding-8percent"},nextItem:{title:"Lush Clone Project",permalink:"/2021/11/10/backend/project/lush-clone"}},_={authorsImageUrls:[void 0]},p=[{value:"Modeling",id:"modeling",level:2},{value:"End Point",id:"end-point",level:2},{value:"Code",id:"code",level:2},{value:"POST /orders/bidding/{int:productsize_id}/{int:position_id} (\uc785\ucc30 \uc0dd\uc131)",id:"post-ordersbiddingintproductsize_idintposition_id-\uc785\ucc30-\uc0dd\uc131",level:3},{value:"GET /orders/bidding/{int:productsize_id}/{int:position_id} (\uc785\ucc30 \uc870\ud68c - \uc8fc\ubb38 \ud398\uc774\uc9c0\uc5d0\uc11c \uc989\uc2dc \uac70\ub798\uac00 \uc870\ud68c)",id:"get-ordersbiddingintproductsize_idintposition_id-\uc785\ucc30-\uc870\ud68c---\uc8fc\ubb38-\ud398\uc774\uc9c0\uc5d0\uc11c-\uc989\uc2dc-\uac70\ub798\uac00-\uc870\ud68c",level:3},{value:"POST /orders/{int:bidding_id} (\uc8fc\ubb38 \uc0dd\uc131)",id:"post-ordersintbidding_id-\uc8fc\ubb38-\uc0dd\uc131",level:3},{value:"GET /orders/size-price/{int:product_id}/{int:position_id} (\uc0c1\ud488\uc758 \uc0ac\uc774\uc988\ubcc4 \uc989\uc2dc \uac70\ub798\uac00 \uc870\ud68c)",id:"get-orderssize-priceintproduct_idintposition_id-\uc0c1\ud488\uc758-\uc0ac\uc774\uc988\ubcc4-\uc989\uc2dc-\uac70\ub798\uac00-\uc870\ud68c",level:3},{value:"GET /orders/price/{int:product_id} (\uc0c1\ud488\uc758 \uc2dc\uc138 \uc870\ud68c)",id:"get-orderspriceintproduct_id-\uc0c1\ud488\uc758-\uc2dc\uc138-\uc870\ud68c",level:3},{value:"GET /orders (\uc8fc\ubb38, \uc785\ucc30\uc911\uc778 \ub0b4\uc5ed \uc870\ud68c)",id:"get-orders-\uc8fc\ubb38-\uc785\ucc30\uc911\uc778-\ub0b4\uc5ed-\uc870\ud68c",level:3}],u={toc:p},a="wrapper";function c(e){let{components:i,...n}=e;return(0,d.kt)(a,(0,t.Z)({},u,n,{components:i,mdxType:"MDXLayout"}),(0,d.kt)("p",null,(0,d.kt)("strong",{parentName:"p"},"\uae30\uac04: 2021-10-10 ~ 2021-10-29")),(0,d.kt)("p",null,(0,d.kt)("strong",{parentName:"p"},"Stack: Python, Django, MySQL, DjangoORM")),(0,d.kt)("p",null,(0,d.kt)("strong",{parentName:"p"},(0,d.kt)("a",{parentName:"strong",href:"https://github.com/chihunmanse/KREAM-motive-Project"},"Github \ub9c1\ud06c"))),(0,d.kt)("h2",{id:"modeling"},"Modeling"),(0,d.kt)("p",null,(0,d.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/61782539/139529652-5d04aa32-b615-478e-87fe-b17693fc3b9c.png",alt:"erd"})),(0,d.kt)("p",null,"\ud544\uc218\ub85c \uad6c\ud604\ud558\uae30\ub85c \ud55c \uae30\ub2a5\ub4e4\uc744 \uc911\uc2ec\uc73c\ub85c \ubaa8\ub378\ub9c1\ud558\uc600\ub2e4. kream\uc740 \uc774\uc6a9\uc790\ub4e4\uc774 \ud55c\uc815\ud310 \uc0c1\ud488\ub4e4\uc744 \uc11c\ub85c \uc0ac\uace0 \ud314\uace0 \ud560 \uc218 \uc788\ub3c4\ub85d \ub9e4\uac1c\ud574\uc8fc\ub294 \uc0ac\uc774\ud2b8\uc774\ub2e4. \uadf8 \uacfc\uc815\uc5d0\uc11c \uc774\uc6a9\uc790\ub4e4\uc774 \uc6d0\ud558\ub294 \uac00\uaca9\uc5d0 \ubb3c\uac74\uc744 \uc0ac\uace0 \ud314 \uc218 \uc788\ub3c4\ub85d \uad6c\ub9e4\uac00\ub098 \ud310\ub9e4\uac00\ub97c \uc81c\uc2dc\ud558\ub294 \uacbd\ub9e4 \uc2dc\uc2a4\ud15c\uc774 \uc788\ub2e4. \uadf8\ub9ac\uace0 \uadf8 \uacbd\ub9e4 \uc2dc\uc2a4\ud15c\uc5d0 \ub530\ub77c\uc11c \ubb3c\uac74\uc744 \uc989\uc2dc \uad6c\ub9e4\ud558\uace0 \uc989\uc2dc \ud310\ub9e4\ud560 \uc218 \uc788\ub294 \uc2e4\uc81c\uc801\uc778 \uac00\uaca9\uc774 \uacb0\uc815\ub41c\ub2e4."),(0,d.kt)("p",null,"\uc0c1\ud488\uc758 \uc0ac\uc774\uc988\ubcc4\ub85c (\uc2e4\uc81c kream\uc5d0\ub294 \uc5ec\ub7ec \uc885\ub958\uc758 \uc0c1\ud488\uc774 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc635\uc158\ub3c4 \uc5ec\ub7ec\uac00\uc9c0\uc9c0\ub9cc \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 \uc2e0\ubc1c\ub9cc \ub2e4\ub8e8\uae30\ub85c \uae30\ud68d\ud588\ub2e4.) \uc785\ucc30\uc774 \uc0dd\uc131\ub41c\ub2e4."),(0,d.kt)("p",null,"kream\uc5d0\uc11c \uad6c\ub9e4, \ud310\ub9e4 \uacc4\uc57d(\uc8fc\ubb38)\uc740 \uac70\ub798\ud558\ub824\ub294 \uc0c1\ud488\uc5d0 \uc785\ucc30\uc774 \ud558\ub098\ub77c\ub3c4 \uac78\ub824\uc788\uc744 \ub54c\ub9cc \uac00\ub2a5\ud558\ub2e4. \uc0c1\ud488\uc744 \uad6c\ub9e4\ud558\ub824\ud560 \ub54c\ub294 \ud574\ub2f9 \uc0c1\ud488\uc758 \ud310\ub9e4 \uc785\ucc30\ub4e4\uc911\uc5d0 \uac00\uc7a5 \ub0ae\uc740 \uac00\uaca9\uc73c\ub85c \uc81c\uc2dc\ub41c \uc785\ucc30\uac00\uac00 \uc989\uc2dc \uad6c\ub9e4\uac00\ub85c \uacb0\uc815\ub418\uace0 \uadf8 \uac00\uaca9\uc774 \ub9c8\uc74c\uc5d0 \ub4e0\ub2e4\uba74 \ubc14\ub85c \uac70\ub798\ud560 \uc218 \uc788\ub2e4. \ubc18\ub300\ub85c \uc0c1\ud488\uc744 \ud310\ub9e4\ud560 \ub54c\ub294 \ud574\ub2f9 \uc0c1\ud488\uc758 \uad6c\ub9e4 \uc785\ucc30\ub4e4\uc911\uc5d0 \uac00\uc7a5 \ub192\uc740 \uac00\uaca9\uc73c\ub85c \uc81c\uc2dc\ub41c \uc785\ucc30\uac00\uac00 \uc989\uc2dc \ud310\ub9e4\uac00\ub85c \uacb0\uc815\ub41c\ub2e4. \ub530\ub77c\uc11c \uc8fc\ubb38\uc740 \uc989\uc2dc\uac70\ub798\ud558\ub294 \uc720\uc800\uc640 \ud574\ub2f9 \uc989\uc2dc\uac70\ub798\uac00\ub97c \ud615\uc131\ud55c \ud558\ub098\uc758 \uc785\ucc30\uc774 \ub9cc\ub098\uc11c \uc774\ub8e8\uc5b4\uc9c4\ub2e4. \ub9cc\uc57d \uc8fc\ubb38 \uc694\uccad\ub41c \uc785\ucc30\uc758 \ud3ec\uc9c0\uc158\uc774 \uad6c\ub9e4\ub77c\uba74 \ud310\ub9e4\uc790\ub294 \uc989\uc2dc\ud310\ub9e4\uac00\ub85c \uac70\ub798\ud558\ub294 \uc720\uc800\uac00 \ub420 \uac83\uc774\uace0 \uad6c\ub9e4\uc790\ub294 \ud574\ub2f9 \uc785\ucc30\uc744 \uc81c\uc2dc\ud55c \uc720\uc800\uac00 \ub420 \uac83\uc774\ub2e4."),(0,d.kt)("p",null,"\uc774\ubc88 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 \uacbd\ub9e4 \ud504\ub85c\uc138\uc2a4\ub97c \uad6c\ud604\ud574\ubcf4\ub294 \uac83\uc5d0 \uc911\uc810\uc744 \ub450\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uacb0\uc81c\ub294 \uc720\uc800\uc758 \ud3ec\uc778\ud2b8\ub97c \uc11c\ub85c \uc8fc\uace0 \ubc1b\ub294 \uac83\uc73c\ub85c \uac04\ub7b5\ud558\uac8c \uae30\ud68d\ud588\ub2e4."),(0,d.kt)("h2",{id:"end-point"},"End Point"),(0,d.kt)("p",null,"\ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc785\ucc30, \uc8fc\ubb38 \uad00\ub828 API\ub97c \ub9cc\ub4dc\ub294 \uc5ed\ud560\uc744 \ub2f4\ub2f9\ud588\ub2e4."),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},"POST /orders/bidding/{int:productsize_id}/{int:position_id} (\uc785\ucc30 \uc0dd\uc131)"),(0,d.kt)("li",{parentName:"ul"},"GET /orders/bidding/{int:productsize_id}/{int:position_id} (\uc785\ucc30 \uc870\ud68c - \uc8fc\ubb38 \ud398\uc774\uc9c0\uc5d0\uc11c \uc989\uc2dc \uac70\ub798\uac00 \uc870\ud68c)"),(0,d.kt)("li",{parentName:"ul"},"POST /orders/{int:bidding_id} (\uc8fc\ubb38 \uc0dd\uc131)"),(0,d.kt)("li",{parentName:"ul"},"GET /orders/size-price/{int:product_id}/{int:position_id} (\uc0c1\ud488\uc758 \uc0ac\uc774\uc988\ubcc4 \uc989\uc2dc \uac70\ub798\uac00 \uc870\ud68c)"),(0,d.kt)("li",{parentName:"ul"},"GET /orders/price/{int:product_id} (\uc0c1\ud488\uc758 \uc2dc\uc138 \uc870\ud68c)"),(0,d.kt)("li",{parentName:"ul"},"GET /orders (\uc8fc\ubb38, \uc785\ucc30\uc911\uc778 \ub0b4\uc5ed \uc870\ud68c)")),(0,d.kt)("h2",{id:"code"},"Code"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"class BiddingStatusId(Enum):\n    ON_BIDDING = 1\n    CONTRACTED = 2\n\nclass BiddingPositionId(Enum):\n    BUY  = 1\n    SELL = 2\n\nclass OrderStatusId(Enum):\n    INSPECTION = 1\n    IN_TRANSIT = 2\n    DELIVERED  = 3\n\nclass InsufficientPointError(Exception):\n    pass\n\nclass InvalidBiddingStatusError(Exception):\n    pass\n\nclass CheckId():\n    def check_product_id(product_id):\n        if not Product.objects.filter(id = product_id).exists():\n            raise Product.DoesNotExist\n\n    def check_product_size_id(productsize_id):\n        if not ProductSize.objects.filter(id = productsize_id).exists():\n            raise ProductSize.DoesNotExist\n\n    def check_bidding_id(bidding_id):\n        if not Bidding.objects.filter(id = bidding_id).exists():\n            raise Bidding.DoesNotExist\n\n    def check_bidding_position_id(position_id):\n        if not BiddingPosition.objects.filter(id = position_id).exists():\n            raise BiddingPosition.DoesNotExist\n\n    def check_bidding_status_id(bidding_status_id):\n        if bidding_status_id == BiddingStatusId.CONTRACTED.value:\n            raise InvalidBiddingStatusError\n\ndef user_point_check(user, position, bidding):\n    if (position == BiddingPositionId.SELL.name and bidding.price > user.point) or (position ==                  BiddingPositionId.BUY.name and bidding.price > bidding.user.point):\n        raise InsufficientPointError\n")),(0,d.kt)("p",null,"position \ud14c\uc774\ube14\uacfc status \ud14c\uc774\ube14\uc758 id\uac12\uc744 \uc0ac\uc6a9\ud558\ub294\ub370 \uc788\uc5b4\uc11c, DB\uc0c1\uc5d0 \uc5b4\ub5a4 \ub370\uc774\ud130\uac00 \uc5b4\ub5a4 id\ub97c \uac16\uace0 \uc788\ub294\uc9c0 \ud5f7\uac08\ub9b4 \uc218 \uc788\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uace0, \ub2e4\ub978 \uc0ac\ub78c\uc774 \ucf54\ub4dc\ub97c \ubd24\uc744 \ub54c\ub3c4 \ub17c\ub9ac\uc801\uc73c\ub85c \uc774\ud574\ud560 \uc218 \uc788\ub3c4\ub85d Enum class\ub4e4\uc744 \ub530\ub85c \ub9cc\ub4e4\uc5b4\uc11c api\ub97c \uc791\uc131\ud560 \ub54c \uc0ac\uc6a9\ud588\ub2e4."),(0,d.kt)("p",null,"\uc694\uccad\uc5d0\uc11c \ub4e4\uc5b4\uc628 id\uc758 \ub370\uc774\ud130\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uac70\ub098 \uc798\ubabb\ub41c id\uac12\uc77c \uacbd\uc6b0\uc5d0 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\ub294 class\ub97c \ub530\ub85c \ub9cc\ub4e4\uc5b4 api \uc548\uc5d0\uc11c \ucf54\ub4dc\uc758 \uac00\ub3c5\uc131\uc744 \uc880 \ub354 \ub192\uc77c \uc218 \uc788\uc5c8\ub2e4."),(0,d.kt)("p",null,(0,d.kt)("inlineCode",{parentName:"p"},"user_point_check")," \ud568\uc218\uc758 \uacbd\uc6b0 \uc8fc\ubb38 \uc0dd\uc131 api\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294\ub370, \ub85c\uadf8\uc778 \uc720\uc800\uac00 \uc81c\ud488\uc744 \ud310\ub9e4\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0\ub294 \uad6c\ub9e4 \uc785\ucc30\uc744 \uac78\uc5c8\ub358 \uc720\uc800\uc758 \ud3ec\uc778\ud2b8\uac00 \uac00\uaca9\ubcf4\ub2e4 \uc801\uc73c\uba74 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uace0, \uad6c\ub9e4\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0\ub294 \ub85c\uadf8\uc778 \uc720\uc800\uc758 \ud3ec\uc778\ud2b8\uac00 \uac00\uaca9\ubcf4\ub2e4 \uc801\uc73c\uba74 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ucf30\ub2e4."),(0,d.kt)("h3",{id:"post-ordersbiddingintproductsize_idintposition_id-\uc785\ucc30-\uc0dd\uc131"},"POST /orders/bidding/{int:productsize_id}/{int:position_id} (\uc785\ucc30 \uc0dd\uc131)"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"class BiddingView(View):\n    @login_decorator\n    def post(self, request, productsize_id, position_id):\n        try:\n            CheckId.check_product_size_id(productsize_id)\n            CheckId.check_bidding_position_id(position_id)\n\n            data  = json.loads(request.body)\n            user  = request.user\n            price = data['price']\n\n            Bidding.objects.create(\n                user                 = user,\n                bidding_status_id    = BiddingStatusId.ON_BIDDING.value,\n                bidding_position_id  = position_id,\n                product_size_id      = productsize_id,\n                price                = price\n            )\n\n            return JsonResponse({'message' : 'SUCCESS'}, status = 201)\n\n        except KeyError:\n            return JsonResponse({'message' : 'KEY_ERROR'}, status = 400)\n\n        except JSONDecodeError:\n            return JsonResponse({'message' : 'JSON_DECODE_ERROR'}, status = 400)\n\n        except ProductSize.DoesNotExist:\n            return JsonResponse({'message' : 'PRODUCT_SIZE_DOES_NOT_EXIST'}, status = 404)\n\n        except BiddingPosition.DoesNotExist:\n            return JsonResponse({'message' : 'INVALID_BIDDING_POSITION'}, status = 400)\n\n")),(0,d.kt)("p",null,"\uc785\ucc30 \uc0dd\uc131\uc740 \uc694\uccad\uc5d0\uc11c path \ubcc0\uc218\ub85c ",(0,d.kt)("inlineCode",{parentName:"p"},"productize_id"),"\uc640 ",(0,d.kt)("inlineCode",{parentName:"p"},"position_id"),"\ub97c \ubc1b\uace0 \uc694\uccad\uc758 body\uc5d0\uc11c \uc720\uc800\uac00 \uc785\ub825\ud55c ",(0,d.kt)("inlineCode",{parentName:"p"},"price")," \uac12\uc744 \ubc1b\uc544\uc11c \uc0dd\uc131\ud55c\ub2e4. \uc0c8\ub85c \uc0dd\uc131\ub418\ub294 \uc785\ucc30\uc758 \uc0c1\ud0dc\ub294 ",(0,d.kt)("inlineCode",{parentName:"p"},"ON_BIDDING"),"\uc758 id\uac12\uc744 \ub123\uc5b4\uc900\ub2e4."),(0,d.kt)("h3",{id:"get-ordersbiddingintproductsize_idintposition_id-\uc785\ucc30-\uc870\ud68c---\uc8fc\ubb38-\ud398\uc774\uc9c0\uc5d0\uc11c-\uc989\uc2dc-\uac70\ub798\uac00-\uc870\ud68c"},"GET /orders/bidding/{int:productsize_id}/{int:position_id} (\uc785\ucc30 \uc870\ud68c - \uc8fc\ubb38 \ud398\uc774\uc9c0\uc5d0\uc11c \uc989\uc2dc \uac70\ub798\uac00 \uc870\ud68c)"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"    @login_decorator\n    def get(self, request, productsize_id, position_id):\n        try:\n            CheckId.check_product_size_id(productsize_id)\n            CheckId.check_bidding_position_id(position_id)\n\n            user              = request.user\n            sell_price_filter = (Q(bidding__bidding_position_id = BiddingPositionId.BUY.value) &\n            Q(bidding__bidding_status_id = BiddingStatusId.ON_BIDDING.value))\n            buy_price_filter  = (Q(bidding__bidding_position_id = BiddingPositionId.SELL.value) &\n            Q(bidding__bidding_status_id = BiddingStatusId.ON_BIDDING.value))\n            biddings          = Bidding.objects.filter(bidding_position_id = position_id, bidding_status_id =\n            BiddingStatusId.ON_BIDDING.value).order_by('price' if position_id == BiddingPositionId.SELL.value\n            else '-price')\n            product_size      = ProductSize.objects.annotate(sell_price = Max('bidding__price', filter =\n            sell_price_filter), buy_price = Min('bidding__price', filter = buy_price_filter)).\\\n                                select_related('size', 'product').prefetch_related(Prefetch('bidding_set',\n                                queryset = biddings)).get(id = productsize_id)\n\n            data = {\n                'product_image_url'    : product_size.product.productimage_set.first().image_url\n                'product_name'         : product_size.product.name,\n                'product_brand'        : product_size.product.brand.name,\n                'product_model_number' : product_size.product.model_number,\n                'size'                 : product_size.size.size,\n                'sell_price'           : product_size.sell_price,\n                'buy_price'            : product_size.buy_price,\n                'user_point'           : user.point,\n                'bidding_id'           : product_size.bidding_set.first().id if product_size.bidding_set.first()\n                else None,\n                'bidding_price'        : product_size.bidding_set.first().price if\n                product_size.bidding_set.first() else None\n            }\n\n            return JsonResponse({'data' : data}, status = 200)\n\n        except ProductSize.DoesNotExist:\n            return JsonResponse({'message' : 'PRODUCT_SIZE_DOES_NOT_EXIST'}, status = 404)\n\n        except ProductSize.MultipleObjectsReturned:\n            return JsonResponse({'message' : 'MULTIPLE_RETURN_ERROR'}, status = 400)\n\n        except BiddingPosition.DoesNotExist:\n            return JsonResponse({'message' : 'INVALID_BIDDING_POSITION'}, status = 400)\n")),(0,d.kt)("p",null,"\uc8fc\ubb38 \ud398\uc774\uc9c0\uc5d0\uc11c \uad6c\ub9e4/\ud310\ub9e4\uc640 \uc0c1\uad00\uc5c6\uc774 \uc989\uc2dc\uad6c\ub9e4\uac00\uc640 \uc989\uc2dc\ud310\ub9e4\uac00\uc758 \uc815\ubcf4\ub97c \ubaa8\ub450 \ubcf4\uc5ec\uc900\ub2e4. path \ubcc0\uc218\ub85c ",(0,d.kt)("inlineCode",{parentName:"p"},"productsize_id"),"\ub97c \ubc1b\uc544\uc640\uc11c \ud574\ub2f9 \uc0c1\ud488\uc758 \uc815\ubcf4\uc640 \ud574\ub2f9 \uc0ac\uc774\uc988\uc5d0 \uc0dd\uc131\ub3fc\uc788\ub294 \uc785\ucc30\ub4e4\uc5d0 \uc811\uadfc\ud55c\ub2e4. \uad6c\ub9e4\uac00\uc640 \ud310\ub9e4\uac00 \ubcc4\ub85c ",(0,d.kt)("inlineCode",{parentName:"p"},"annotate()"),"\uc5d0\uc11c \uc0ac\uc6a9\ud560 filter \uc870\uac74\ub4e4\uc744 \ubbf8\ub9ac \ub9cc\ub4e4\uc5b4\uc8fc\uc5c8\ub2e4. \uad6c\ub9e4\uac00\ub97c \uad6c\ud560 \ub54c \ud574\ub2f9\ub418\ub294 \uc870\uac74\uc740 \uc544\uc9c1 \uacc4\uc57d \uc644\ub8cc\ub418\uc9c0 \uc54a\uc740 \uc785\ucc30\uc911\uc5d0 position\uc774 SELL\uc778 \uacbd\uc6b0\uc774\uace0 \ud310\ub9e4\uac00\ub294 position\uc774 BUY\uc778 \uacbd\uc6b0\uc774\ub2e4. \uad6c\ub9e4\uac00\ub294 filter \uc870\uac74\ub4e4\uc758 \uc785\ucc30\ub4e4\uc911\uc5d0\uc11c \uac00\uc7a5 \ub0ae\uc740 \uac00\uaca9\uc758 \uc785\ucc30\uac00\ub97c ",(0,d.kt)("inlineCode",{parentName:"p"},"Min()"),"\uc744 \ud1b5\ud574 \uac00\uc838\uc654\uace0 \ud310\ub9e4\uac00\ub294 \uac00\uc7a5 \ub192\uc740 \uac00\uaca9\uc758 \uc785\ucc30\uac00\ub97c ",(0,d.kt)("inlineCode",{parentName:"p"},"Max()"),"\ub97c \ud1b5\ud574 \uac00\uc838\uc654\ub2e4."),(0,d.kt)("p",null,(0,d.kt)("inlineCode",{parentName:"p"},"Prefetch()"),"\uc758 \ucffc\ub9ac\uc14b\uc73c\ub85c \uc0ac\uc6a9\ud560 biddings \ucffc\ub9ac\uc14b\uc744 \uc870\uac74\uc5d0 \ub9de\uac8c \ubbf8\ub9ac \uc9c0\uc815\ud574\uc8fc\uc5c8\ub2e4. \uc785\ucc30\uc0c1\ud0dc\uac00 \uc544\uc9c1 \uc785\ucc30\uc911\uc774\uace0, \uc694\uccad\uc5d0\uc11c \uc5bb\uc740 position\uc5d0 \ud574\ub2f9\ud558\ub294 \uc785\ucc30\ub4e4\uc911\uc5d0 position\uc5d0 \ub530\ub77c \ub0ae\uc740 \uac00\uaca9\uc21c, \ub192\uc740 \uac00\uaca9\uc21c\uc73c\ub85c \uc815\ub82c\ub418\uac8c \ud588\ub2e4. \ud574\ub2f9 \uc0c1\ud488 \uc0ac\uc774\uc988\uc5d0 position\uc5d0 \ub9de\ub294 \uc785\ucc30\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\uae30 \ub54c\ubb38\uc5d0 ",(0,d.kt)("inlineCode",{parentName:"p"},"bidding_set.first()"),"\ub97c \uc0ac\uc6a9\ud560 \ub54c ",(0,d.kt)("inlineCode",{parentName:"p"},"first()"),"\uac00 None\uc774\uba74 None\uc774 \ubc18\ud658\ub418\uac8c \ud588\ub2e4. None\uc5d0 \ub300\ud55c \ucc98\ub9ac\ub97c \ud574\uc8fc\uc9c0 \uc54a\uc73c\uba74 ",(0,d.kt)("inlineCode",{parentName:"p"},"first()"),"\uac00 None\uc77c\ub54c ",(0,d.kt)("inlineCode",{parentName:"p"},"bidding_set.first().id")," \ub098 ",(0,d.kt)("inlineCode",{parentName:"p"},".price")," \ucc98\ub7fc \ud544\ub4dc\uc5d0 \uc811\uadfc\ud558\uba74 AttributeError\uac00 \ubc1c\uc0dd\ud55c\ub2e4."),(0,d.kt)("p",null,"\ub9cc\uc57d \uac70\ub798\ud558\ub824\ub294 \uc0c1\ud488\uc758 position\uc5d0 \ub9de\ub294 \uc785\ucc30\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc73c\uba74 \uc989\uc2dc\uac70\ub798\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc989\uc2dc\uad6c\ub9e4/\ud310\ub9e4 \uc790\uccb4\uac00 \ubd88\uac00\ub2a5\ud558\uace0 \uc785\ucc30 \uc0dd\uc131\ub9cc \uac00\ub2a5\ud558\ub2e4."),(0,d.kt)("p",null,"\uc774\ubc88\uc5d0 api\ub97c \ub9cc\ub4e4\uace0 \ud504\ub860\ud2b8 \ubd84\ub4e4\uacfc \uc18c\ud1b5\ud558\ub294 \uacfc\uc815\uc5d0\uc11c \uc11c\ub85c \uc790\uc8fc \ud5f7\uac08\ub838\ub358 \uc9c0\uc810\uc774 \uc720\uc800\uac00 \uad6c\ub9e4/\ud310\ub9e4\ud558\uae30 \uc704\ud574 \uac70\uae30\uc5d0 \ub9de\ub294 \uc785\ucc30\uc744 \uc870\ud68c\ud560 \ub54c\ub294 ",(0,d.kt)("inlineCode",{parentName:"p"},"position_id"),"\ub97c \ubc18\ub300\uc758 \uacbd\uc6b0\ub85c \uc694\uccad\ud574\uc57c\ud55c\ub2e4\ub294 \uc810\uc774\uc5c8\ub2e4. \ub9cc\uc57d \uad6c\ub9e4\uc790\uac00 \uc989\uc2dc\uad6c\ub9e4\ud560 \uc218 \uc788\ub294 \uc785\ucc30\uc774 \uc788\ub294\uc9c0 \uc870\ud68c\ud560 \ub54c\ub294 \ud310\ub9e4\uc785\ucc30\ub4e4\uc911\uc5d0\uc11c \uc870\ud68c\ud574\uc57c\ud558\uae30 \ub54c\ubb38\uc5d0 \uc694\uccad\ud574\uc57c\ud560 \uc785\ucc30\uc758 position\uc740 SELL\uc774 \ub41c\ub2e4. \ud558\uc9c0\ub9cc \uad6c\ub9e4\uc790\uac00 \uc989\uc2dc\uad6c\ub9e4\ud560 \uc218 \uc788\ub294 \uc785\ucc30\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uac70\ub098 \ud604\uc7ac \ud615\uc131\ub41c \uc989\uc2dc\uad6c\ub9e4\uac00\uac00 \ub9c8\uc74c\uc5d0 \ub4e4\uc9c0 \uc54a\uc544\uc11c \ub2e4\ub978 \uac00\uaca9\uc73c\ub85c \uc785\ucc30\uc744 \ud55c\ub2e4\uace0 \ud558\uba74 (\uc785\ucc30 \uc0dd\uc131\ud560 \ub54c\uc758) position\uc740 \uadf8\ub300\ub85c BUY\uac00 \ub41c\ub2e4."),(0,d.kt)("h3",{id:"post-ordersintbidding_id-\uc8fc\ubb38-\uc0dd\uc131"},"POST /orders/{int:bidding_id} (\uc8fc\ubb38 \uc0dd\uc131)"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"class OrderView(View):\n    @login_decorator\n    @transaction.atomic\n    def post(self, request, bidding_id):\n        try:\n            CheckId.check_bidding_id(bidding_id)\n\n            user              = request.user\n            bidding           = Bidding.objects.select_related('bidding_status', 'bidding_position',\n            'user').get(id = bidding_id)\n            bidding_status_id = bidding.bidding_status_id\n            position          = bidding.bidding_position.position\n\n            CheckId.check_bidding_status_id(bidding_status_id)\n            user_point_check(user, position,bidding)\n\n            Order.objects.create(\n                order_status_id = OrderStatusId.INSPECTION.value,\n                bidding         = bidding,\n                buyer           = bidding.user if position == BiddingPositionId.BUY.name else user,\n                seller          = bidding.user if position == BiddingPositionId.SELL.name else user\n            )\n\n            bidding.bidding_status_id = BiddingStatusId.CONTRACTED.value\n            bidding.save()\n\n            if position == BiddingPositionId.BUY.name:\n                user.point = user.point + bidding.price\n                user.save()\n                bidding.user.point = bidding.user.point - bidding.price\n                bidding.user.save()\n\n            if position == BiddingPositionId.SELL.name:\n                user.point = user.point - bidding.price\n                user.save()\n                bidding.user.point = bidding.user.point + bidding.price\n                bidding.user.save()\n\n            return JsonResponse({'message' : 'SUCCESS'}, status = 201)\n\n        except Bidding.DoesNotExist:\n            return JsonResponse({'message' : 'BIDDING_DOES_NOT_EXIST'}, status = 404)\n\n        except Bidding.MultipleObjectsReturned:\n            return JsonResponse({'message' : 'MULTIPLE_RETURN_ERROR'}, status = 400)\n\n        except InvalidBiddingStatusError:\n            return JsonResponse({'message' : 'INVALID_BIDDING_ID'}, status = 400)\n\n        except InsufficientPointError:\n            return JsonResponse({'message' : 'INSUFFICIENT_POINT'}, status = 400)\n")),(0,d.kt)("p",null,"\uc8fc\ubb38\uc740 path \ubcc0\uc218\ub85c \uc785\ucc30 id\ub97c \ubc1b\uc544\uc11c \uc774\ub8e8\uc5b4\uc9c4\ub2e4. \uc8fc\ubb38\uc774 \uc81c\ub300\ub85c \uc0dd\uc131\ub418\uc9c0 \uc54a\uc558\ub2e4\uba74 \uc720\uc800\uc758 point \ubcc0\ud654\ub3c4 \uc5c6\uc5b4\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \ud2b8\ub79c\uc7ad\uc158\uc744 \uc801\uc6a9\ud588\ub2e4."),(0,d.kt)("p",null,"\uc774\ubc88 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 \uc720\uc800\uc758 point\ub97c \uc11c\ub85c \uc8fc\uace0 \ubc1b\ub294 \uac83\uc73c\ub85c \uacb0\uc81c\uac00 \ub418\ub3c4\ub85d \uae30\ud68d\ud588\uae30 \ub54c\ubb38\uc5d0 \uad6c\ub9e4 \uc720\uc800\uac00 \uacb0\uc81c\uae08\uc561\ub9cc\ud07c point\ub97c \ubcf4\uc720\ud558\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uace0 \ubd80\uc871\ud558\uba74 \uc8fc\ubb38\uc774 \ubd88\uac00\ub2a5\ud558\uac8c \ud588\ub2e4."),(0,d.kt)("p",null,"\uc8fc\ubb38\uc744 \uc0dd\uc131\ud560 \ub54c\ub294 \uc785\ucc30\uc5d0 \uc788\ub294 position \uc815\ubcf4\ub97c \ud1b5\ud574 buyer\uc640 seller\ub97c \uad6c\ubd84\ud558\uc5ec \uc720\uc800\ub97c \ub4f1\ub85d\ud574\uc8fc\uace0 \uc8fc\ubb38\uc774 \uc644\ub8cc\ub41c \ud574\ub2f9 \uc785\ucc30\uc758 \uc0c1\ud0dc\ub97c \uacc4\uc57d\uc644\ub8cc\ub85c \ubcc0\uacbd\ud574\uc8fc\uc5c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c position\uc5d0 \ub530\ub77c \uc720\uc800\uc758 point\ub3c4 \uacb0\uc81c\uae08\uc561\ub9cc\ud07c \uc99d\ucc28\uac10 \uc2dc\ucf30\ub2e4."),(0,d.kt)("h3",{id:"get-orderssize-priceintproduct_idintposition_id-\uc0c1\ud488\uc758-\uc0ac\uc774\uc988\ubcc4-\uc989\uc2dc-\uac70\ub798\uac00-\uc870\ud68c"},"GET /orders/size-price/{int:product_id}/{int:position_id} (\uc0c1\ud488\uc758 \uc0ac\uc774\uc988\ubcc4 \uc989\uc2dc \uac70\ub798\uac00 \uc870\ud68c)"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"class SizePriceView(View):\n    @login_decorator\n    def get(self, request, product_id, position_id):\n        try:\n            CheckId.check_product_id(product_id)\n            CheckId.check_bidding_position_id(position_id)\n\n            product = Product.objects.select_related('brand').get(id = product_id)\n            sizes   = ProductSize.objects.select_related('size').filter(product_id =\n            product_id).prefetch_related(\n                      Prefetch('bidding_set', queryset = Bidding.objects.filter(bidding_position_id =\n                      position_id, bidding_status_id = BiddingStatusId.ON_BIDDING.value).\\\n                      order_by('price' if position_id == BiddingPositionId.SELL.value else '-price')))\n\n            product_info = {\n                'product_image_url'    : product.productimage_set.first().image_url,\n                'product_name'         : product.name,\n                'product_brand'        : product.brand.name,\n                'product_model_number' : product.model_number,\n            }\n\n            size_price_list = [{\n                'productsize_id' : size.id,\n                'size'           : size.size.size,\n                'bidding_id'     : size.bidding_set.first().id if size.bidding_set.first() else None,\n                'bidding_price'  : size.bidding_set.first().price if size.bidding_set.first() else None,\n            } for size in sizes]\n\n            return JsonResponse({'product_info' : product_info, 'size_price_list' : size_price_list}, status =\n            200)\n\n        except Product.DoesNotExist:\n            return JsonResponse({'message' : 'PRODUCT_DOES_NOT_EXIST'}, status = 404)\n\n        except Product.MultipleObjectsReturned:\n            return JsonResponse({'message' :  'MULTIPLE_RETURN_ERROR'}, status = 400)\n\n        except BiddingPosition.DoesNotExist:\n            return JsonResponse({'message' : 'INVALID_BIDDING_POSITION'}, status = 400)\n")),(0,d.kt)("p",null,"\uc720\uc800\uac00 \uad6c\ub9e4/\ud310\ub9e4 \ud398\uc774\uc9c0\uc5d0 \ub4e4\uc5b4\uac14\uc744 \ub54c \ud574\ub2f9 \uc0c1\ud488\uc758 \uc815\ubcf4\uc640 \uc0c1\ud488\uc758 \uc0ac\uc774\uc988\ubcc4\ub85c \ud615\uc131\ub418\uc5b4\uc788\ub294 \uc989\uc2dc\uac70\ub798\uac00\uc758 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\uc8fc\ub294 api\uc774\ub2e4. \ub9cc\uc57d \uc989\uc2dc\uac70\ub798\uac00\uac00 \ud615\uc131\ub3fc\uc788\uc9c0 \uc54a\uc740 \uc0ac\uc774\uc988\ub77c\uba74 \ub2e4\uc74c \ud398\uc774\uc9c0\uc5d0\uc11c \uc8fc\ubb38\uc740 \ubd88\uac00\ub2a5\ud558\uace0 \uc785\ucc30 \uc0dd\uc131\uc694\uccad\ub9cc \uac00\ub2a5\ud558\ub2e4."),(0,d.kt)("p",null,(0,d.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/61782539/140075771-17bbd095-e526-4016-a6b5-29d704edd7e0.gif",alt:null})),(0,d.kt)("h3",{id:"get-orderspriceintproduct_id-\uc0c1\ud488\uc758-\uc2dc\uc138-\uc870\ud68c"},"GET /orders/price/{int:product_id} (\uc0c1\ud488\uc758 \uc2dc\uc138 \uc870\ud68c)"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"class PriceHistoryView(View):\n    @query_debugger\n    def get(self, request, product_id):\n        try:\n            CheckId.check_product_id(product_id)\n            size   = request.GET.get('size')\n            period = request.GET.get('period', '1y')\n            sort   = request.GET.get('sort')\n            limit  = int(request.GET.get('limit', 5))\n            offset = int(request.GET.get('offset', 0))\n            limit  = offset + limit\n\n            sort_by = {\n                'low_price'  : 'price',\n                'high_price' : '-price',\n                'low_size'   : 'size',\n                'high_size'  : '-size',\n                'recent'     : '-created_at'\n            }\n\n            order_period = {\n                '1m' : datetime.now() - relativedelta(months = 1),\n                '3m' : datetime.now() - relativedelta(months = 3),\n                '6m' : datetime.now() - relativedelta(months = 6),\n                '1y' : datetime.now() - relativedelta(years = 1),\n            }\n\n            order_grape_filter = (Q(bidding__product_size__product_id = product_id) & Q(created_at__range =   (order_period.get(period, '1y'), datetime.now())))\n            order_filter       = Q(bidding__product_size__product_id = product_id)\n            bidding_filter     = (Q(bidding_status_id = BiddingStatusId.ON_BIDDING.value) &\n                                  Q(product_size__product_id = product_id))\n\n            if size:\n                if not ProductSize.objects.filter(product_id = product_id, size__size = size).exists():\n                    return JsonResponse({'message' : 'PRODUCT_SIZE_DOES_NOT_EXIST'}, status = 404)\n\n                product_size = ProductSize.objects.get(product_id = product_id, size__size = size)\n                order_grape_filter.add(Q(bidding__product_size = product_size), Q.AND)\n                order_filter.add(Q(bidding__product_size = product_size), Q.AND)\n                bidding_filter.add(Q(product_size = product_size), Q.AND)\n\n            order_graph   =\n            Order.objects.select_related('bidding').filter(order_grape_filter).order_by('created_at')\n            orders        = Order.objects.annotate(price = F('bidding__price'), size = F('bidding__product_size__size__size')).select_related('bidding__product_size__size').\\\n                            filter(order_filter).order_by(sort_by.get(sort, '-created_at'))\n            sell_biddings = Bidding.objects.annotate(size = F('product_size__size__size')).select_related('product_size__size').\\\n                            filter(bidding_filter, bidding_position_id =\n                                   BiddingPositionId.SELL.value).order_by(sort_by.get(sort, 'price'))\n            buy_biddings  = Bidding.objects.annotate(size = F('product_size__size__size')).select_related('product_size__size').\\\n                            filter(bidding_filter, bidding_position_id = BiddingPositionId.BUY.value).order_by(sort_by.get(sort, '-price'))\n\n            data = {\n            'order_graph_data' : [{\n                'id'         : order.id,\n                'price'      : order.bidding.price,\n                'created_at' : order.created_at.strftime('%Y-%m-%d')\n            }for order in order_graph],\n\n            'order_list' : [{\n                'id'         : order.id,\n                'price'      : order.bidding.price,\n                'size'       : order.bidding.product_size.size.size,\n                'created_at' : order.created_at.strftime('%Y-%m-%d')\n            }for order in orders[offset:limit]],\n\n            'sell_bidding_list' : [{\n                'price' : sell_bidding['price'],\n                'size'  : sell_bidding['size'],\n                'count' : sell_bidding['price_count']\n            }for sell_bidding in sell_biddings.values('price', 'size').annotate(price_count = Count('price')).distinct()[offset:limit]],\n\n            'buy_bidding_list' : [{\n                'price' : buy_bidding['price'],\n                'size'  : buy_bidding['size'],\n                'count' : buy_bidding['price_count']\n            }for buy_bidding in buy_biddings.values('price','size').annotate(price_count = Count('price')).distinct()[offset:limit]]\n            }\n\n            return JsonResponse({'data' : data}, status = 200)\n\n        except Product.DoesNotExist:\n            return JsonResponse({'message' : 'PRODUCT_DOES_NOT_EXIST'}, status = 404)\n\n        except ProductSize.DoesNotExist:\n            return JsonResponse({'message' : 'PRODUCT_SIZE_DOES_NOT_EXIST'}, status = 404)\n\n        except ProductSize.MultipleObjectsReturned:\n            return JsonResponse({'message' : 'MULTIPLE_RETURN_ERROR'}, status = 400)\n")),(0,d.kt)("p",null,"kream \uc0ac\uc774\ud2b8\uc5d0\ub294 \uc0c1\ud488 \uc0c1\uc138\ud398\uc774\uc9c0\ub85c \ub4e4\uc5b4\uac14\uc744 \ub54c \ud574\ub2f9 \uc0c1\ud488\uc758 \uccb4\uacb0\uac70\ub798\uac00\ub97c \uadf8\ub798\ud504\ub85c \uc2dc\uac01\ud654\ud558\uc5ec \ubcf4\uc5ec\uc8fc\uace0 \ud310\ub9e4/\uad6c\ub9e4 \uc785\ucc30\ub0b4\uc5ed\ub4e4\ub3c4 \ubcf4\uc5ec\uc900\ub2e4. \uc774\ubc88 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc774 \ubd80\ubd84\ub3c4 \uad6c\ud604\ud574\ubcf4\uc558\ub2e4."),(0,d.kt)("p",null,"\uba3c\uc800 \uc8fc\ubb38\ub0b4\uc5ed \uadf8\ub798\ud504 \ub370\uc774\ud130\ub294 \uae30\uac04\ubcc4, \uc0ac\uc774\uc988\ubcc4 \ud544\ud130\ub9c1\ub9cc \uc801\uc6a9\ub418\uace0 \uc194\ud305\uc740 \uc801\uc6a9\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ud544\ud130 \uc870\uac74\uacfc \ucffc\ub9ac\uc14b\uc744 \ub530\ub85c \uad00\ub9ac\ud558\uc600\ub2e4. relativedelta \ubaa8\ub4c8\uc744 \uc0ac\uc6a9\ud574\uc11c \ub0a0\uc9dc \uc5f0\uc0b0\uc774 \uac00\ub2a5\ud588\uace0 \uc694\uccad\uc758 ",(0,d.kt)("inlineCode",{parentName:"p"},"period")," \uac12\uc5d0 \ub530\ub77c ",(0,d.kt)("inlineCode",{parentName:"p"},"created_at__range")," \ud0a4\uc6cc\ub4dc\ub97c \ud1b5\ud574 \ud574\ub2f9\ud558\ub294 \uae30\uac04\ub9cc\ud07c\ub9cc \uc8fc\ubb38\ub0b4\uc5ed \ub370\uc774\ud130\ub97c \ud544\ud130\ub9c1\ud560 \uc218 \uc788\uc5c8\ub2e4. \uc0ac\uc774\uc988\ub85c \ud544\ud130\ub9c1\ud588\uc744 \ub54c\ub294 \uadf8\ub798\ud504\ub97c \ud3ec\ud568\ud558\uc5ec \uc8fc\ubb38\ub0b4\uc5ed, \uc785\ucc30\ub0b4\uc5ed \ub370\uc774\ud130 \ubaa8\ub450 \ud544\ud130\ub9c1\uc774 \uc801\uc6a9\ub418\uace0, \uc194\ud305\uc740 \uc8fc\ubb38\ub0b4\uc5ed\uc740 \ucd5c\uc2e0\uc21c, \ud310\ub9e4 \uc785\ucc30 \ub0b4\uc5ed\uc740 \ub0ae\uc740 \uac00\uaca9\uc21c, \uad6c\ub9e4 \uc785\ucc30 \ub0b4\uc5ed\uc740 \ub192\uc740 \uac00\uaca9\uc21c\uc774 \uae30\ubcf8\uc774 \ub418\uac8c \ud588\uace0 \uc694\uccad\uc5d0 \ub530\ub77c \uac00\uaca9\uc21c, \uc0ac\uc774\uc988\uc21c, \ucd5c\uc2e0\uc21c\uc73c\ub85c \uc194\ud305\ub418\uac8c \ud558\uc600\ub2e4."),(0,d.kt)("p",null,(0,d.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/61782539/140075522-8afded39-ee1e-4f14-a4ed-ed0932fc73dd.gif",alt:null})),(0,d.kt)("h3",{id:"get-orders-\uc8fc\ubb38-\uc785\ucc30\uc911\uc778-\ub0b4\uc5ed-\uc870\ud68c"},"GET /orders (\uc8fc\ubb38, \uc785\ucc30\uc911\uc778 \ub0b4\uc5ed \uc870\ud68c)"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"class OrderListView(View):\n    @login_decorator\n    def get(self, request):\n        user = request.user\n\n        buy_orders  = Order.objects.select_related('bidding__product_size__product__brand',\n                                                   'bidding__product_size__size', 'order_status').\\\n                    filter(buyer = user).prefetch_related('bidding__product_size__product__productimage_set')\n\n        sell_orders = Order.objects.select_related('bidding__product_size__product__brand',\n                                                   'bidding__product_size__size', 'order_status').\\\n                    filter(seller = user).prefetch_related('bidding__product_size__product__productimage_set')\n\n        biddings    = Bidding.objects.select_related('product_size__product__brand', 'product_size__size').\\\n                    filter(user = user, bidding_status_id = BiddingStatusId.ON_BIDDING.value).prefetch_related('product_size__product__productimage_set')\n\n        buy_order_list = [{\n            'product_id'        : buy_order.bidding.product_size.product.id,\n            'product_image_url' : buy_order.bidding.product_size.product.productimage_set.all()[0].image_url,\n            'product_name'      : buy_order.bidding.product_size.product.name,\n            'product_brand'     : buy_order.bidding.product_size.product.brand.name,\n            'size'              : buy_order.bidding.product_size.size.size,\n            'order_status'      : buy_order.order_status.status,\n        }for buy_order in buy_orders]\n\n        sell_order_list = [{\n            'product_id'        : sell_order.bidding.product_size.product.id,\n            'product_image_url' : sell_order.bidding.product_size.product.productimage_set.all()[0].image_url,\n            'product_name'      : sell_order.bidding.product_size.product.name,\n            'product_brand'     : sell_order.bidding.product_size.product.brand.name,\n            'size'              : sell_order.bidding.product_size.size.size,\n            'order_status'      : sell_order.order_status.status,\n        }for sell_order in sell_orders]\n\n        buy_bidding_list = [{\n            'product_id'        : buy_bidding.product_size.product.id,\n            'product_image_url' : buy_bidding.product_size.product.productimage_set.all()[0].image_url,\n            'product_name'      : buy_bidding.product_size.product.name,\n            'product_brand'     : buy_bidding.product_size.product.brand.name,\n            'size'              : buy_bidding.product_size.size.size,\n        } for buy_bidding in biddings.filter(bidding_position_id = BiddingPositionId.BUY.value)]\n\n        sell_bidding_list = [{\n            'product_id'        : sell_bidding.product_size.product.id,\n            'product_image_url' : sell_bidding.product_size.product.productimage_set.all()[0].image_url,\n            'product_name'      : sell_bidding.product_size.product.name,\n            'product_brand'     : sell_bidding.product_size.product.brand.name,\n            'size'              : sell_bidding.product_size.size.size,\n        } for sell_bidding in biddings.filter(bidding_position_id = BiddingPositionId.SELL.value)]\n\n        buy_order_count       = len(buy_order_list)\n        sell_order_count      = len(sell_order_list)\n        buy_on_bidding_count  = len(buy_bidding_list)\n        sell_on_bidding_count = len(sell_bidding_list)\n\n        data = {\n            'user_name'             : user.name,\n            'user_email'            : user.email,\n            'user_point'            : user.point,\n            'buy_order_count'       : buy_order_count,\n            'buy_order_list'        : buy_order_list,\n            \"sell_order_count\"      : sell_order_count,\n            'sell_order_list'       : sell_order_list,\n            'buy_on_bidding_count'  : buy_on_bidding_count,\n            'buy_bidding_list'      : buy_bidding_list,\n            'sell_on_bidding_count' : sell_on_bidding_count,\n            'sell_bidding_list'     : sell_bidding_list\n        }\n\n        return JsonResponse({'data' : data}, status = 200)\n")),(0,d.kt)("p",null,"\ub9c8\uc774\ud398\uc774\uc9c0\uc5d0 \ub4e4\uc5b4\uac14\uc744 \ub54c \ud574\ub2f9 \uc720\uc800\uc758 \ud3ec\uc778\ud2b8\uc640 \uad6c\ub9e4/\ud310\ub9e4 \ub0b4\uc5ed\uacfc \uad6c\ub9e4/\ud310\ub9e4 \uc785\ucc30 \ub0b4\uc5ed\uc744 \ubcfc \uc218 \uc788\ub3c4\ub85d \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\uc8fc\ub294 api\uc774\ub2e4. \uc785\ucc30\ub0b4\uc5ed\uc911\uc5d0 \uc785\ucc30 \uc0c1\ud0dc\uac00 \uac70\ub798\uc644\ub8cc\uc778 \uc785\ucc30\ub4e4\uc740 \uc8fc\ubb38\ub0b4\uc5ed\uc5d0 \uc774\ubbf8 \ud3ec\ud568\ub3fc\uc788\uae30 \ub54c\ubb38\uc5d0 \uc785\ucc30\ub0b4\uc5ed\uc740 \ud604\uc7ac \uc785\ucc30\uc911\uc778 \uc785\ucc30\ub4e4\ub9cc \ubcf4\uc5ec\uc8fc\ub3c4\ub85d \ud588\ub2e4. productimage \ud14c\uc774\ube14\uc5d0 \uc811\uadfc\ud574\uc11c \uccab\ubc88\uc9f8\uc758 \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub294 \ubd80\ubd84\uc5d0\uc11c \ub9cc\uc57d ",(0,d.kt)("inlineCode",{parentName:"p"},"first()"),"\ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 ",(0,d.kt)("inlineCode",{parentName:"p"},"prefetch_related()")," \ub85c productimage \ud14c\uc774\ube14\uc744 \uc9c0\uc815\ud574\uc8fc\uc5b4\ub3c4 for \ubb38\uc744 \ub3cc \ub54c n+1 problem\uc774 \ud574\uacb0\ub418\uc9c0 \uc54a\ub294\ub2e4. ",(0,d.kt)("inlineCode",{parentName:"p"},"first()"),"\ub97c \uc0ac\uc6a9\ud588\uc744 \ub54c \ud2b9\ubcc4\ud788 order_by\ub97c \uc9c0\uc815\ud574\uc8fc\uc9c0 \uc54a\uc73c\uba74 id\uac12\uc73c\ub85c \uc815\ub82c\uc2dc\ud0a8 \ud6c4 \uccab\ubc88\uc9f8\ub97c \uac00\uc838\uc624\uae30 \ub54c\ubb38\uc5d0 for\ubb38\uc744 \ub3cc \ub54c\ub9c8\ub2e4 id\ub85c \uc815\ub82c\uc2dc\ud0a4\ub294 \ucffc\ub9ac\uac00 \ub0a0\ub77c\uac04\ub2e4. \uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub824\uba74 ",(0,d.kt)("inlineCode",{parentName:"p"},"productimage_set.all()[0].image_url")," \ucc98\ub7fc \uc778\ub371\uc2a4\ub85c \uc811\uadfc\ud558\uba74 \ub41c\ub2e4."),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-python"},"sizes   = ProductSize.objects.select_related('size').filter(product_id =\n            product_id).prefetch_related(\n                      Prefetch('bidding_set', queryset = Bidding.objects.filter(bidding_position_id =\n                      position_id, bidding_status_id = BiddingStatusId.ON_BIDDING.value).\\\n                      order_by('price' if position_id == BiddingPositionId.SELL.value else '-price')))\n\n'bidding_id'     : size.bidding_set.first().id if size.bidding_set.first() else None\n")),(0,d.kt)("p",null,"\uc704\uc758 \uc0ac\uc774\uc988\ubcc4 \uc989\uc2dc\uac70\ub798\uac00\ub97c \uc870\ud68c\ud558\ub294 api\uc5d0\uc11c\ub294 bidding \ud14c\uc774\ube14\uc5d0 \ub300\ud574 price\ub098 -price\ub85c order_by\ub97c \uc9c0\uc815\ud574\ub193\uc558\uae30 \ub54c\ubb38\uc5d0 ",(0,d.kt)("inlineCode",{parentName:"p"},"first()"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec\ub3c4 \ubb38\uc81c\ub418\uc9c0 \uc54a\ub294\ub2e4."),(0,d.kt)("p",null,(0,d.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/61782539/140076298-19e102b9-69d6-4c52-a1d8-90043f5b867f.gif",alt:null}),"\n",(0,d.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/61782539/140076515-c785cbf2-5322-4b46-ac6d-ab5622baff2c.gif",alt:null})))}c.isMDXComponent=!0}}]);